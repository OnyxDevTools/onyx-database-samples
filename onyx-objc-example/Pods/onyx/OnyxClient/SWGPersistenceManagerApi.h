#import <Foundation/Foundation.h>
#import "SWGEntityException.h"
#import "SWGEntityListRequestBody.h"
#import "SWGEntityRequestBody.h"
#import "SWGEntityQueryBody.h"
#import "SWGEntityFindRequestBody.h"
#import "SWGNoResultsException.h"
#import "SWGEntityIDRequestBody.h"
#import "SWGEntityInitializeBody.h"
#import "SWGSaveRelationshipRequestBody.h"
#import "SWGObject.h"
#import "SWGApiClient.h"


/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface SWGPersistenceManagerApi: NSObject

@property(nonatomic, assign)SWGApiClient *apiClient;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(SWGPersistenceManagerApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(SWGPersistenceManagerApi*) sharedAPI;
///
///
/// Bulk Delete Managed Entities
/// This is used to batch save entities in order to provide optimized throughput.
///
/// @param entity Save Entities Request
/// 
///
/// @return 
-(NSNumber*) batchDeletePostWithCompletionBlock :(SWGEntityListRequestBody*) entity 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Bulk Save Managed Entities
/// This is used to batch save entities in order to provide optimized throughput.
///
/// @param entity Save Entities Request
/// 
///
/// @return 
-(NSNumber*) batchSavePostWithCompletionBlock :(SWGEntityListRequestBody*) entity 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Delete Managed Entity
/// The Delete Entity endpoint is used to persist an entity and cascade entity relationships.
///
/// @param entity Managed Entity Request Object
/// 
///
/// @return NSNumber*
-(NSNumber*) deleteEntityPostWithCompletionBlock :(SWGEntityRequestBody*) entity 
    
    completionHandler: (void (^)(NSNumber* output, NSError* error))completionBlock;
    


///
///
/// Execute Query
/// Execyte query with defined criteria
///
/// @param query Query defined with criteria
/// 
///
/// @return NSObject*
-(NSNumber*) executePostWithCompletionBlock :(SWGEntityQueryBody*) query 
    
    completionHandler: (void (^)(NSObject* output, NSError* error))completionBlock;
    


///
///
/// Execute Delete Query
/// Execyte delete query with defined criteria
///
/// @param query Query defined with criteria
/// 
///
/// @return NSNumber*
-(NSNumber*) executeDeletePostWithCompletionBlock :(SWGEntityQueryBody*) query 
    
    completionHandler: (void (^)(NSNumber* output, NSError* error))completionBlock;
    


///
///
/// Execute Update Query
/// Execyte update query with defined criteria and update instructions
///
/// @param query Query defined with criteria and update instructions
/// 
///
/// @return NSNumber*
-(NSNumber*) executeUpdatePostWithCompletionBlock :(SWGEntityQueryBody*) query 
    
    completionHandler: (void (^)(NSNumber* output, NSError* error))completionBlock;
    


///
///
/// Managed Entity by Primary Key exists
/// Find Managed Entity by primary Key within Partition(optional) and determine if it exists
///
/// @param entity Managed Entity Request Object
/// 
///
/// @return NSNumber*
-(NSNumber*) existsPostWithCompletionBlock :(SWGEntityFindRequestBody*) entity 
    
    completionHandler: (void (^)(NSNumber* output, NSError* error))completionBlock;
    


///
///
/// Find Managed Entity by Primary Key
/// Find Managed Entity by primary Key within Partition(optional)
///
/// @param entity Managed Entity Request Object
/// 
///
/// @return NSObject*
-(NSNumber*) findPostWithCompletionBlock :(SWGEntityFindRequestBody*) entity 
    
    completionHandler: (void (^)(NSObject* output, NSError* error))completionBlock;
    


///
///
/// Find Managed Entity by Reference ID
/// Find Managed Entity by data storage reference id
///
/// @param entity Managed Entity Request Object
/// 
///
/// @return NSObject*
-(NSNumber*) findByReferenceIdPostWithCompletionBlock :(SWGEntityIDRequestBody*) entity 
    
    completionHandler: (void (^)(NSObject* output, NSError* error))completionBlock;
    


///
///
/// Find Managed Entity by Primary Key and Partition ID
/// Find Managed Entity by primary Key within Partition(optional)
///
/// @param entity Managed Entity Request Object
/// 
///
/// @return NSObject*
-(NSNumber*) findWithPartitionIdPostWithCompletionBlock :(SWGEntityFindRequestBody*) entity 
    
    completionHandler: (void (^)(NSObject* output, NSError* error))completionBlock;
    


///
///
/// Initialize Managed Entity's relationship by attribute name
/// Hydrate relationship associated to that entity.
///
/// @param entity Initilize Relationship Request
/// 
///
/// @return NSArray* /* NSObject */
-(NSNumber*) initializePostWithCompletionBlock :(SWGEntityInitializeBody*) entity 
    
    completionHandler: (void (^)(NSArray* /* NSObject */ output, NSError* error))completionBlock;
    


///
///
/// Save Managed Entity
/// The Save Entity endpoint is used to persist an entity and cascade entity relationships.
///
/// @param entity Managed Entity Request Object
/// 
///
/// @return NSObject*
-(NSNumber*) saveEntityPostWithCompletionBlock :(SWGEntityRequestBody*) entity 
    
    completionHandler: (void (^)(NSObject* output, NSError* error))completionBlock;
    


///
///
/// Bulk Save Relationships
/// This is used to batch save entities' relationships in order to offer more throughput when persisting.
///
/// @param entity Save Relationships Request
/// 
///
/// @return NSArray* /* NSObject */
-(NSNumber*) saveRelationshipsPostWithCompletionBlock :(SWGSaveRelationshipRequestBody*) entity 
    
    completionHandler: (void (^)(NSArray* /* NSObject */ output, NSError* error))completionBlock;
    



@end
